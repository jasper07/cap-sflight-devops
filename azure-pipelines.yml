name: cap-sflight-devops
resources:
  containers:
    - container: cfcli
      image: "ppiper/cf-cli"
      options: --user 0:0 --privileged
trigger:
  - main

stages:
  - stage: Build
    displayName: Build MTA for SAP Cloud Platform
    jobs:
      - job: build
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - script: npm install
            displayName: NPM install
          # - script: npm run lint
          #   displayName: Lint check all code
          # - script: npm run test:ci
          #   displayName: Run Unit tests - cap srv
          # - script: npm run test:ci
          #   workingDirectory: $(System.DefaultWorkingDirectory)/app/travel_processor
          #   displayName: Run integration tests - Manage Travels
          # - script: npm run test:ci
          #   workingDirectory: $(System.DefaultWorkingDirectory)/app/travel_analytics
          #   displayName: Run integration tests - Analyze Bookings

          - script: npm run build:cf:sqlite
            displayName: Build MTA

          - publish: $(System.DefaultWorkingDirectory)/mta_archives/.
            artifact: WebApp
            displayName: "Publish archive folder"

        # - task: PublishCodeCoverageResults@1
        #   displayName: Publish Code Coverage Results
        #   inputs:
        #     codeCoverageTool: Cobertura
        #     summaryFileLocation: $(System.DefaultWorkingDirectory)/test-results/coverage/cobertura-coverage.xml

        # - task: PublishTestResults@2
        #   displayName: Publish Test Results
        #   inputs:
        #     testResultsFormat: "JUnit"
        #     testResultsFiles: '**/TEST-*.xml'
        #     mergeTestResults: false

  - stage: Acceptance
    displayName: Deploy and Test
    dependsOn:
      - Build
    jobs:
      - job: deploy
        pool:
          vmImage: "ubuntu-latest"
        container: cfcli
        steps:
          - checkout: none
          - download: current
            artifact: WebApp
          - bash: |
              cf login -u "$(CF-USER)" -p "$(CF-PASSWORD)" -a "$(CF-API)" -o "$(CF-ORG)" -s "$(CF-SPACE)"
              cf deploy $(Pipeline.Workspace)/WebApp/*.mtar -f

  - stage: Compliance
    displayName: Scan for vulnerabilities
    dependsOn:
      - Acceptance
    jobs:
      - job: compliance
        steps:
          - checkout: none
          - script: echo Compliance

  - stage: Release
    displayName: Upload to TMS queue
    dependsOn:
      - Acceptance
    jobs:
      - job: upload
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - checkout: self
          - script: npm install
            displayName: NPM install
          - download: current
            artifact: WebApp
          - script: npm run ctmsupload
            env:
              TMS_API: $(TMS_API) #ctms-variables
              TOKEN_URL: $(TOKEN_URL) #ctms-variables
              CLIENT_ID: $(CLIENT_ID) #ctms-variables
              CLIENT_SECRET: $(CLIENT_SECRET) #ctms-variables
              CTMS_NODE: "QAS_MTA"
              USER_NAME: $(Build.RequestedForEmail)
              DESCRIPTION: "$(Build.DefinitionName): $(Build.SourceVersionMessage)"
              MTA_PATH: "$(Pipeline.Workspace)/WebApp"
            displayName: Upload to CTMS
