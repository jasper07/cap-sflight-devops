name: cap-sflight-devops
resources:
  containers:
    - container: cfcli
      image: "ppiper/cf-cli"
      options: --user 0:0 --privileged
trigger:
  - main

stages:
  - stage: Build
    displayName: Build MTA for SAP Cloud Platform
    jobs:
      - job: build
        pool:
          vmImage: 'ubuntu-latest'
        steps:   
        - script: npm install
          displayName: NPM install
        - script: npm run lint
          displayName: Lint check all code     
        - script: npm run test:ci 
          displayName: Run Unit tests - cap srv
        - script: npm run test:ci 
          workingDirectory: $(System.DefaultWorkingDirectory)/app/travel_processor
          displayName: Run integration tests - Manage Travels
        - script: npm run test:ci 
          workingDirectory: $(System.DefaultWorkingDirectory)/app/travel_analytics
          displayName: Run integration tests - Analyze Bookings

        - script: npm run build:cf:sqlite
          displayName: Build MTA

        - publish: $(System.DefaultWorkingDirectory)/mta_archives/.
          artifact: WebApp
          displayName: 'Publish archive folder'

        - task: PublishCodeCoverageResults@1
          displayName: Publish Code Coverage Results
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: $(System.DefaultWorkingDirectory)/test-results/coverage/cobertura-coverage.xml

        - task: PublishTestResults@2
          displayName: Publish Test Results
          inputs:
            testResultsFormat: "JUnit"
            testResultsFiles: '**/TEST-*.xml'
            mergeTestResults: false


  - stage: Acceptance
    displayName: Deploy and Test
    dependsOn:
      - Build
    jobs:
    - job: deploy
      pool:
        vmImage: 'ubuntu-latest'
      container: cfcli
      steps:
        - checkout: none
        - download: current
          artifact: WebApp
        - bash: |
                  cf login -u "$(CF-USER)" -p "$(CF-PASSWORD)" -a "$(CF-API)" -o "$(CF-ORG)" -s "$(CF-SPACE)"
                  cf deploy $(Pipeline.Workspace)/WebApp/*.mtar -f

  - stage: Compliance
    displayName: Scan for vulnerabilities
    dependsOn:
      - Acceptance
    jobs:
      - job: compliance
        steps:
          - checkout: none
          - script: echo Compliance

  - stage: Release
    displayName: Upload to TMS queue
    dependsOn:
      - Compliance
    jobs:
      - job: release
        steps:
          - checkout: none
          - script: echo Release