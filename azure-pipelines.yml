name: cap-sflight-devops
resources:
  containers:
    - container: cfcli
      image: "ppiper/cf-cli"
      options: --user 0:0 --privileged
trigger:
  - main
stages:
  - stage: Build
    displayName: Build MTAR
    jobs:
      - job: build
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - script: npm ci
            displayName: NPM install
          - script: npm run lint
            displayName: Lint check all code

          - script: npm run test -- --watchAll=false --reporters=default --reporters=jest-junit --coverage --coverageReporters=cobertura
            displayName: Run Unit tests - with junit and coverage results

          - bash: |
              npm ci
              npm run test:node -- --ci
            workingDirectory: $(System.DefaultWorkingDirectory)/app/travel_processor
            displayName: Run integration tests - Manage Travels

          - bash: |
              npm ci
              npm run test:node -- --ci
            workingDirectory: $(System.DefaultWorkingDirectory)/app/travel_analytics
            displayName: Run integration tests - Analyze Bookings

          - script: npm run build:cf:sqlite
            displayName: Build MTA

          - publish: $(System.DefaultWorkingDirectory)/mta_archives/.
            artifact: WebApp
            displayName: "Publish archive folder"

          - task: PublishCodeCoverageResults@1
            displayName: Publish Code Coverage Results
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: $(System.DefaultWorkingDirectory)/test-results/coverage/cobertura-coverage.xml

          - task: PublishTestResults@2
            displayName: Publish Test Results
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "**/TEST-*.xml"
              mergeTestResults: false

  - stage: Deploy
    displayName: Deploy to DEV
    variables:
      - group: cloudfoundry-variables
    dependsOn:
      - Build
    jobs:
      - job: deploy
        pool:
          vmImage: "ubuntu-latest"
        container: cfcli
        steps:
          - checkout: none
          - download: current
            artifact: WebApp
          - bash: |
              cf login -u "$(CF-USER)" -p "$(CF-PASSWORD)" -a "$(CF-API)" -o "$(CF-ORG)" -s "$(CF-SPACE)"
              cf deploy $(Pipeline.Workspace)/WebApp/*.mtar -f

  - stage: Scan
    displayName: Security Scan
    dependsOn:
      - Deploy
    jobs:
      - job: scan
        steps:
        - template: azure-pipelines/templates/steps/snykSecurityScan.yml
  - stage: E2E_tests
    displayName: Perform E2E Tests
    dependsOn:
    - Scan
    jobs:
      - template: azure-pipelines/templates/jobs/wdi5-test.yml
        parameters: 
          scriptName: wdi5:headless
          runJob: true
      - template: azure-pipelines/templates/jobs/browserstack-test.yml
        parameters: 
          scriptName: wdi5:browserstack
          runJob: false
      - template: azure-pipelines/templates/jobs/performance-test.yml
        parameters:
          filename: performance/capsflightLaunchpad.js
          runJob: false

  - stage: Upload
    displayName: Upload to TMS queue
    dependsOn:
      - E2E_tests
    jobs:
      - template: azure-pipelines/templates/jobs/uploadToCtms.yml
